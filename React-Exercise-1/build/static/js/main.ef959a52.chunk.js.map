{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","time","settime","useEffect","setInterval","updateTime","className","getDay","getHours","getMinutes","getSeconds","getMonth","getDate","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAmFeA,G,MAhFH,WAAO,IAAD,EACQC,mBAAS,IAAIC,MADrB,mBACTC,EADS,KACHC,EADG,KAGhBC,qBAAU,WACRC,YAAYC,EAAY,QAG1B,IAAMA,EAAa,WACjBH,EAAQ,IAAIF,OAyDd,OACE,sBAAKM,UAAU,YAAf,UACE,mBAAGA,UAAU,MAAb,SAvDW,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAEUL,EAAKM,YA+Cf,sBAAKD,UAAU,SAAf,UACE,mBAAGA,UAAU,OAAb,SAzBE,GAAN,OACEL,EAAKO,WAAa,IACdP,EAAKO,WAAa,GAAK,GACrB,KAAOP,EAAKO,WAAa,IAE3BP,EAAKO,WALX,cAOEP,EAAKQ,aAAe,GAAK,IAAMR,EAAKQ,aAAeR,EAAKQ,gBAmBtD,sBAAKH,UAAU,aAAf,UACE,mBAAGA,UAAU,MAAb,SATCL,EAAKO,YAAc,GAAK,KAAO,OAUhC,mBAAGF,UAAU,MAAb,SAhBA,GAAN,OACEL,EAAKS,cAAgB,GAAKT,EAAKS,aAAe,IAAMT,EAAKS,sBAkBzD,mBAAGJ,UAAU,OAAb,SAnCI,GAAN,OAfe,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGeL,EAAKU,YAAtB,YAAqCV,EAAKW,UAA1C,YAAuDX,EAAKY,sBC/BjDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef959a52.chunk.js","sourcesContent":["import \"./styles/app.scss\";\nimport React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [time, settime] = useState(new Date());\n\n  useEffect(() => {\n    setInterval(updateTime, 1000);\n  });\n\n  const updateTime = () => {\n    settime(new Date());\n  };\n\n  const getDayFromTime = () => {\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    return days[time.getDay()];\n  };\n\n  const getDateFromTime = () => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n\n    return `${months[time.getMonth()]} ${time.getDate()} ${time.getFullYear()}`;\n  };\n\n  const getTimeFromTime = () => {\n    return `${\n      time.getHours() > 12\n        ? time.getHours() - 12 < 10\n          ? \"0\" + (time.getHours() - 12)\n          : time.getHours()\n        : time.getHours()\n    } : ${\n      time.getMinutes() < 10 ? \"0\" + time.getMinutes() : time.getMinutes()\n    }`;\n  };\n\n  const getSeconds = () => {\n    return `${\n      time.getSeconds() >= 10 ? time.getSeconds() : \"0\" + time.getSeconds()\n    }`;\n  };\n\n  const getAmPm = () => {\n    return time.getHours() >= 12 ? \"PM\" : \"AM\";\n  };\n\n  return (\n    <div className=\"container\">\n      <p className=\"day\">{getDayFromTime()}</p>\n      <div className=\"middle\">\n        <p className=\"time\">{getTimeFromTime()}</p>\n        <div className=\"middle_two\">\n          <p className=\"one\">{getAmPm()}</p>\n          <p className=\"two\">{getSeconds()}</p>\n        </div>\n      </div>\n      <p className=\"date\">{getDateFromTime()}</p>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}