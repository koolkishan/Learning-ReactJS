{"version":3,"sources":["components/ComponentB.jsx","components/ComponentA.jsx","App.js","reportWebVitals.js","index.js"],"names":["ComponentB","state","count","handleIncrement","coun","setState","this","Component","ComponentA","props","handleClick","copmtRef","current","React","createRef","ref","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiBeA,E,4MAfbC,MAAQ,CAAEC,MAAO,G,EACjBC,gBAAkB,WAChB,IAAMC,EAAO,EAAKH,MAAMC,MAAQ,EAChC,EAAKG,SAAS,CAAEH,MAAOE,K,uDAIvB,OACE,mCACE,6BAAKE,KAAKL,MAAMC,c,GAVCK,aCqBVC,E,kDAnBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,YAAc,WACZ,EAAKC,SAASC,QAAQT,mBAJtB,EAAKF,MAAQ,GACb,EAAKU,SAAWE,IAAMC,YAHL,E,qDAUjB,OACE,qCACE,cAAC,EAAD,CAAYC,IAAKT,KAAKK,WACtB,wBAAQK,QAASV,KAAKI,YAAtB,8B,GAdiBH,a,MCQVU,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.948a787e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass ComponentB extends Component {\r\n  state = { count: 0 };\r\n  handleIncrement = () => {\r\n    const coun = this.state.count + 1;\r\n    this.setState({ count: coun });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>{this.state.count}</h1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentB;\r\n","import React, { Component } from \"react\";\r\nimport ComponentB from \"./ComponentB\";\r\nclass ComponentA extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.copmtRef = React.createRef();\r\n  }\r\n  handleClick = () => {\r\n    this.copmtRef.current.handleIncrement();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ComponentB ref={this.copmtRef} />\r\n        <button onClick={this.handleClick}>Increment</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentA;\r\n","import ComponentA from \"./components/ComponentA\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ComponentA />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}